import{e as b,l as t}from"./index.027ae11e.js";const p="100000",w="https://diamtestnet.diamcircle.io/",i="Diamante Testnet",v=300;async function m({source:o,destination:a,amount:e,memo:r}){if(parseFloat(e.toString())<1)throw b(400,{message:"insufficient starting balance"});let c=await new t.Server(w).loadAccount(o),s=new t.TransactionBuilder(c,{networkPassphrase:i,fee:p});return r&&s.addMemo(t.Memo.text(r)),s.addOperation(t.Operation.createAccount({destination:a,startingBalance:e.toString()})),{transaction:s.setTimeout(v).build().toXDR(),network_passphrase:i}}async function M({source:o,destination:a,asset:e,amount:r,memo:n}){let s=await new t.Server(w).loadAccount(o),d=new t.TransactionBuilder(s,{networkPassphrase:i,fee:p}),u;return e&&e!=="native"?u=new t.Asset(e.split(":")[0],e.split(":")[1]):u=t.Asset.native(),n&&(typeof n=="string"?d.addMemo(t.Memo.text(n)):typeof n=="object"&&d.addMemo(t.Memo.hash(n.toString("hex")))),d.addOperation(t.Operation.payment({destination:a,amount:r.toString(),asset:u})),{transaction:d.setTimeout(v).build().toXDR(),network_passphrase:i}}async function P({source:o,asset:a,limit:e}){let r=new t.Asset(a.split(":")[0],a.split(":")[1]),c=await new t.Server(w).loadAccount(o);return{transaction:new t.TransactionBuilder(c,{networkPassphrase:i,fee:p}).addOperation(t.Operation.changeTrust({asset:r,limit:e==null?void 0:e.toString()})).setTimeout(v).build().toXDR(),network_passphrase:i}}async function y({source:o,sourceAsset:a,sourceAmount:e,destination:r,destinationAsset:n,destinationAmount:c,memo:s}){let u=await new t.Server(w).loadAccount(o),l=new t.TransactionBuilder(u,{networkPassphrase:i,fee:p}),A=a==="native"?t.Asset.native():new t.Asset(a.split(":")[0],a.split(":")[1]),T=n==="native"?t.Asset.native():new t.Asset(n.split(":")[0],n.split(":")[1]),f=(98*parseFloat(c)/100).toFixed(7);return s&&l.addMemo(t.Memo.text(s)),l.addOperation(t.Operation.pathPaymentStrictSend({sendAsset:A,sendAmount:e.toString(),destination:r,destAsset:T,destMin:f})),{transaction:l.setTimeout(v).build().toXDR(),network_passphrase:i}}async function g({source:o,sourceAsset:a,sourceAmount:e,destination:r,destinationAsset:n,destinationAmount:c,memo:s}){let u=await new t.Server(w).loadAccount(o),l=new t.TransactionBuilder(u,{networkPassphrase:i,fee:p}),A=a==="native"?t.Asset.native():new t.Asset(a.split(":")[0],a.split(":")[1]),T=n==="native"?t.Asset.native():new t.Asset(n.split(":")[0],n.split(":")[1]),f=(100*parseFloat(e)/98).toFixed(7);return s&&l.addMemo(t.Memo.text(s)),l.addOperation(t.Operation.pathPaymentStrictReceive({sendAsset:A,sendMax:f,destination:r,destAsset:T,destAmount:c})),{transaction:l.setTimeout(v).build().toXDR(),network_passphrase:i}}export{m as a,M as b,P as c,g as d,y as e};
